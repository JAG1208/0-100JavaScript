Haz una clase llamada Persona que siga las siguientes condiciones:
Sus atributos son: nombre, edad, DNI, sexo (H hombre, M mujer), peso y altura. No queremos que se accedan directamente a ellos. Piensa que modificador de acceso es el más adecuado
Por defecto, todos los atributos menos el DNI serán valores por defecto según su tipo (0 números, cadena vacía para String, etc.). Sexo sera mujer por defecto, usa una constante para ello.
Un constructor con el nombre, edad y sexo, el resto por defecto.
Los métodos que se implementaran son:
calcularIMC(): calculara si la persona esta en su peso ideal (peso en kg/(altura^2 en m)), si esta fórmula devuelve un valor menor que 20, la función devuelve un -1, si devuelve un número entre 20 y 25 (incluidos), significa que esta por debajo de su peso ideal la función devuelve un 0 y si devuelve un valor mayor que 25 significa que tiene sobrepeso, la función devuelve un 1. Te recomiendo que uses constantes para devolver estos valores.
esMayorDeEdad(): indica si es mayor de edad, devuelve un booleano.
comprobarSexo(char sexo): comprueba que el sexo introducido es correcto. Si no es correcto, sera H. No sera visible al exterior.
toString(): devuelve toda la información del objeto.
generaDNI(): genera un número aleatorio de 8 cifras, genera a partir de este su número su letra correspondiente. Este método sera invocado cuando se construya el objeto. Puedes dividir el método para que te sea más fácil. No será visible al exterior.
Métodos set de cada parámetro, excepto de DNI.
Ahora, crea una clase ejecutable que haga lo siguiente:
Crea 3 objetos de la clase anterior con datos aleatorios, el segundo objeto obtendrá todos los anteriores menos el peso y la altura y el último por defecto, para este último utiliza los métodos set para darle a los atributos un valor.
Para cada objeto, deberá comprobar si esta en su peso ideal, tiene sobrepeso o por debajo de su peso ideal con un mensaje.
Indicar para cada objeto si es mayor de edad.
Por último, mostrar la información de cada objeto.

Su vuelo sale en unos días del aeropuerto costero; la forma más fácil de bajar a la costa desde aquí es en trineo.
El comerciante de North Pole Toboggan Rental Shop está teniendo un mal día. "Algo está mal con nuestras computadoras; ¡no podemos iniciar sesión!
 Su base de datos de contraseñas parece estar un poco dañada: algunas de las contraseñas no habrían sido permitidas por la Política Corporativa Oficial de Tobogán que estaba en vigor cuando fueron elegidas.
Para intentar depurar el problema, han creado una lista (la entrada de su rompecabezas) de contraseñas (de acuerdo con la base de datos dañada) y la política corporativa cuando se estableció esa contraseña.
Por ejemplo, suponga que tiene la siguiente lista:
1-3 a: abcde
 1-3 b: cdefg
2-9 c: ccccccccc
Cada línea proporciona la política de contraseñas y luego la contraseña.
 La política de contraseñas indica el número más bajo y más alto de veces que debe aparecer una letra determinada para que la contraseña sea válida. Por ejemplo, 1-3 a significa que la contraseña debe contener al menos 1 vez y como máximo 3 veces.
 En el ejemplo anterior, 2 contraseñas son válidas.
La contraseña del medio, cdefg, no lo es; no contiene instancias de b, pero necesita al menos 1.
La primera y tercera contraseñas son válidas: contienen una a o nueve c, ambas dentro de los límites de sus respectivas políticas. ¿Cuántas contraseñas son válidas según sus políticas? archivo psw.txt


Encontrar las dos entradas que suman 2020Por ejemplo, suponga que su informe de gastos contiene lo siguiente:
[1721, 979, 366, 299,675,1456]
En esta lista, las dos entradas que suman 2020 son 1721 y 299. Multiplicarlas juntas produce 1721 * 299 = 514579, por lo que la respuesta correcta es 514579.
Por supuesto, su informe de gastos es mucho más grande. Encuentre las dos entradas que sumen 2020
Hint: Debe crear alguna  función que a partir del txt te genere un vector. Usar el método split... (editado)  <rchivo arrays.txt